require('dotenv').config();
const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');

// Schema utilisateur simple
const userSchema = new mongoose.Schema({
    name: String,
    email: { type: String, unique: true },
    password: String,
    role: { type: String, default: 'user' },
    isPremium: { type: Boolean, default: false },
    createdAt: { type: Date, default: Date.now }
});

userSchema.pre('save', async function(next) {
    if (!this.isModified('password')) return next();
    const salt = await bcrypt.genSalt(10);
    this.password = await bcrypt.hash(this.password, salt);
    next();
});

userSchema.methods.comparePassword = async function(candidatePassword) {
    return await bcrypt.compare(candidatePassword, this.password);
};

const User = mongoose.model('User', userSchema);

async function createAdmin() {
    try {
        const MONGODB_URI = process.env.MONGODB_URI;
        if (!MONGODB_URI) {
            console.log('‚ùå MONGODB_URI non trouv√© dans .env');
            return;
        }

        await mongoose.connect(MONGODB_URI);
        console.log('‚úÖ Connect√© √† MongoDB');

        const email = 'bahophilomeevrard@gmail.com';
        const password = 'Philome98@';

        // Supprimer l'utilisateur existant
        await User.deleteOne({ email });
        console.log('üóëÔ∏è Ancien utilisateur supprim√© (si existant)');

        // Cr√©er le nouvel admin
        const admin = new User({
            name: 'Bahophilom√© Evrard',
            email: email,
            password: password,
            role: 'admin',
            isPremium: true
        });

        await admin.save();
        console.log('‚úÖ Admin cr√©√© avec succ√®s');

        // Test de connexion
        const testUser = await User.findOne({ email });
        const isMatch = await testUser.comparePassword(password);
        
        console.log('üîê Test de connexion:', isMatch ? 'R√âUSSI ‚úÖ' : '√âCHEC ‚ùå');
        
        if (isMatch) {
            console.log('üéâ Vous pouvez maintenant vous connecter avec:');
            console.log(`   Email: ${email}`);
            console.log(`   Mot de passe: ${password}`);
        }

    } catch (error) {
        console.error('‚ùå Erreur:', error.message);
    } finally {
        await mongoose.disconnect();
        console.log('üì§ D√©connect√© de MongoDB');
    }
}

createAdmin();
